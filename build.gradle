apply plugin: 'java'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'eclipse'

// need utf-8 to get text with non-standard chars e.g. curly apostrophes used correctly 
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// This is a work around for an outstanding issue getting eclipse plugin to honour encoding options for java
// https://issues.gradle.org/browse/GRADLE-2274
eclipse {
	File f = file('.settings')
	
	if (f.exists()) {
		f = file('.settings/org.eclipse.core.resources.prefs')
		f.write('eclipse.preferences.version=1\n')
		f.append('encoding/<project>=UTF-8')
	}
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

// Always refreshes snapshots
configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

repositories {
	maven { url "https://jitpack.io" }
	mavenLocal()
	maven {
		url = 'http://oss.jfrog.org/oss-snapshot-local'
	}
	mavenCentral()
}

configurations {
	javaDoclet
}

// A number of libraries we are using include selenium as a dependecy, use this to check
// gradlew dependencyInsight  --dependency org.seleniumhq.selenium:selenium-java --configuration testCompile
// Enable this to confirm:
/*
configurations.all {
	resolutionStrategy {
		// fail eagerly on version conflict (includes transitive dependencies)
		// e.g. multiple different versions of the same dependency (group and name are equal)
		failOnVersionConflict()
    }
}
*/

dependencies {
	// This uses Jitpack to build and import multiple modules from Github
	//testCompile 'com.github.concordion:cubano:master-SNAPSHOT'
	//testCompile 'org.concordion:cubano:0.1.0-SNAPSHOT'
    //testCompile 'com.github.concordion:cubano:config-SNAPSHOT'
	//testCompile 'com.github.concordion:cubano:master-SNAPSHOT'
	testCompile 'com.github.concordion.cubano:cubano-config:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-core:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-framework:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-webdriver:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-webdriver-manager:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-http:1d961d1a29'
	testCompile 'com.github.concordion.cubano:cubano-httpeasy:1d961d1a29'
	
	testCompile 'org.codejargon:fluentjdbc:1.6'

	// TODO - we can't redistribute this
    testCompile files('libs/ojdbc7.jar')
    
    testCompile 'commons-beanutils:commons-beanutils:1.9.2'
    	
	// Find Bugs Annotations
	testCompile 'net.sourceforge.findbugs:annotations:1.3.2'
}

checkstyle {
	//toolVersion = '6.19'
	ignoreFailures = true

	println ("**** CHECKSTYLE TOOL VERSION ${toolVersion} ")
	// Using default location /config/checkstyle/checkstyle.xml
	//configFile = new File("checkstyle-cyf-msd-5.xml")

	// Exclude generated source set
	// sourceSets = [sourceSets.main, sourceSets.test]
}

findbugs {
	toolVersion = "3.0.1"
	ignoreFailures = true
	// Exclude generated source set
	sourceSets = [sourceSets.main, sourceSets.test]
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'

    // To download through proxy, need to update <project root>\gradle\wrapper\gradle-wrapper.properties and change 
    //		distributionUrl property from https... to http...
    // and uncomment follow line    
    // distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-bin.zip"
}

// sourceSets {
//   test {
//     java { srcDir 'src/generated/java' }
//     resources { srcDir 'src/generated/resources'}
//   }
// }

test {
	exclude '**/demo/*.*'
    
    // Pass through all supplied system properties - excluding those containing '.' as some of these system properties introduce JNA incompatibility issues
    System.properties.each { k, v->
        if (!k.contains(".")) {
            println "Passing system property $k: $v"
            systemProperty k, v
       	}
    }
	 
    // need utf-8 to get text with non-standard chars e.g. apostrophes comparing successfully 
    systemProperty 'file.encoding', 'UTF-8'

    // Logback Configuration
    if (System.getProperty('logback.configurationFile') != null) systemProperty 'logback.configurationFile', System.getProperty('logback.configurationFile')
        
    // Parallel Runner
	if (System.getProperty('concordion.run.threadCount') != null) {
		systemProperty 'concordion.extensions', 'org.concordion.ext.ParallelRunExtension'
		systemProperty 'concordion.run.threadCount', System.getProperty('concordion.run.threadCount')
	}
	
    systemProperty 'concordion.output.dir', "$reporting.baseDir/spec"
    outputs.upToDateWhen { false } // ensure the tests run each time, even if no changes to test code
    testLogging.showStandardStreams = true
	testLogging.showExceptions = true
}